package es.mgamallo.prometeo;




import java.awt.AWTException;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;

import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

public class VentanaExplorador extends javax.swing.JFrame {

    private JButton boton2ianus;
	private JButton botonReiniciarNavegadores;
	private JButton botonHabilitarTeclas;
	private JButton jButton4;
	private JButton botonReiniciarNHC;
	private JButton jButton6;
	private JButton botonResetearSubida;
	private JButton jButton8;
	private JButton jButton9;
	private JButton jButton10;
	private JButton jButton11;
	private JButton jButton12;
	private JButton botonVentanaNombres;
	private JButton botonSalirOAsociar;
	

	
	private PopupMenu menuPop = new PopupMenu();
	private MenuItem itemApartar = new MenuItem("Apartar");
	private MenuItem itemDudas = new MenuItem("Dudas");
	private MenuItem itemYaSubidos = new MenuItem("Ya subidas");
	
	private int indexPdfYaSubidos = -1;
	private int indexApartado = -1;
	private int indexDudas = -1;
	/**
     * Creates new form VentanaExplorador
     */
	
	
	private int posicionSeparador = 900;
	
    public VentanaExplorador(CargaListaPdfs pdfs) {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

    	
    	
        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelPdfs = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPdfs = new javax.swing.JList();
        listaModeloPdfs = new DefaultListModel();
        panelControl = new javax.swing.JPanel();
        
        // Botones
        boton2ianus = new javax.swing.JButton();
        botonReiniciarNavegadores = new javax.swing.JButton();
        botonHabilitarTeclas = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        botonReiniciarNHC = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        botonResetearSubida = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        botonVentanaNombres = new javax.swing.JButton();
        botonSalirOAsociar = new javax.swing.JButton();
        
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Pdfs");
        setPreferredSize(new java.awt.Dimension(200, 900));
        
        menuPop.add(new MenuItem()); // menu item temporal. Se le asignará el nombre del pdf
        menuPop.addSeparator();
        menuPop.add(itemApartar);
        menuPop.add(itemDudas);
        menuPop.add(itemYaSubidos);
        
        itemYaSubidos.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				
				Inicio.panelPrincipal.webBrowserOperaciones.navigate(InterfazPrincipal.DIR_SALIR);
				Inicio.panelPrincipal.panelActivo = InterfazPrincipal.SALIR;
				
				/*
				try {
					Thread.sleep(2000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				*/
				Cerrar.cerrarTodo();
				try {
					Thread.sleep(2000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				MoverCarpetas.moverPdfs(null, indexPdfYaSubidos);
				
				Inicio.panelPrincipal.webBrowserOperaciones.navigate(InterfazPrincipal.DIR_SALIR);
				Inicio.panelPrincipal.webBrowserOperaciones.setVisible(true);
				Inicio.panelPrincipal.panelActivo = InterfazPrincipal.SALIR;
				Inicio.panelPrincipal.inicioCarpetasSubidas = true;
				Inicio.panelPrincipal.frame.toFront();
			}
		});

        itemDudas.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				
				habilita();
				Object comentario = JOptionPane.showInputDialog(null,"Escribe un breve comentario sobre el documento","Anotación",JOptionPane.QUESTION_MESSAGE);
				if(comentario.toString() != null){

						String ruta = Inicio.rutaDudas + "\\" + Inicio.usuario.alias;
						ruta += "\\" + comentario.toString() + "\\";
						File directorio = new File(ruta);
						boolean directorioCreado = directorio.mkdirs();
						if(directorioCreado){
							ruta += Inicio.documento[indexDudas].nombreArchivo;
							CopiarFichero.copiar(Inicio.documento[indexDudas].rutaArchivo,ruta);
							JOptionPane.showMessageDialog(null, "Pdf enviado a dudas");
						}
						else{
							JOptionPane.showMessageDialog(null, "Error al enviar el documento a dudas");;
						}
					}

				habilita();				
				
			}
		});
        
        itemApartar.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				
				habilita();
				
				Object comentario = JOptionPane.showInputDialog(null,"Escribe un breve comentario sobre porqué se aparta el documento","Anotación",JOptionPane.QUESTION_MESSAGE);
				if(comentario.toString() != null){
						String ruta = Inicio.rutaFirmados + "\\Apartado por " + Inicio.usuario.alias + ". Pendiente";
						
						if(Inicio.usuario.urgencias){
							ruta = Inicio.rutaFirmadosUrgencias + "\\Apartado por " + Inicio.usuario.alias + ". Pendiente";
						}
						
						ruta += "\\" + comentario.toString() + "\\";
						File directorio = new File(ruta);
						boolean directorioCreado = directorio.mkdirs();
						if(directorioCreado || directorio.exists()){
							ruta += Inicio.documento[indexApartado].nombreArchivo;
							CopiarFichero.copiar(Inicio.documento[indexApartado].rutaArchivo,ruta);
							JOptionPane.showMessageDialog(null, "Pdf apartado");
						}
						else{
							JOptionPane.showMessageDialog(null, "Error al apartar el documento");;
						}

				}
				habilita();
			}
		});
        
        jSplitPane1.setDividerLocation(posicionSeparador);
        jSplitPane1.setDividerSize(10);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setOneTouchExpandable(true);

        panelPdfs.setPreferredSize(new java.awt.Dimension(50, 400));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(50, 400));

        listaPdfs.add(menuPop);
        
        listaPdfs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listaPdfs);
        listaPdfs.addMouseListener(new MouseAdapter() {
        	
        	public void mouseReleased(MouseEvent ev){
        		if(ev.isPopupTrigger()){
        			indexPdfYaSubidos = listaPdfs.locationToIndex(ev.getPoint());
        			indexApartado = indexPdfYaSubidos;
        			indexDudas = indexApartado;
        			if(indexPdfYaSubidos != -1){
        				menuPop.remove(0);
        				String nombrePdf = listaModeloPdfs.get(indexPdfYaSubidos).toString();
        				nombrePdf = nombrePdf.substring(0,15);
        				menuPop.insert(new MenuItem(nombrePdf), 0);
        				menuPop.show(listaPdfs, ev.getPoint().x + 30, ev.getPoint().y +10);
        			}
        			
        		}
        	}
        	public void mouseClicked(MouseEvent ev){

            		pulsarListaPdfs(ev);


        	}
		});

        javax.swing.GroupLayout panelPdfsLayout = new javax.swing.GroupLayout(panelPdfs);
        panelPdfs.setLayout(panelPdfsLayout);
        panelPdfsLayout.setHorizontalGroup(
            panelPdfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, 170)
        );
        panelPdfsLayout.setVerticalGroup(
            panelPdfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPdfsLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(panelPdfs);
        
        boton2ianus.setText("Inicio 2 ianus");
        boton2ianus.setBackground(Color.yellow);
        boton2ianus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio.gestion = new Gestion2Ianus();
                Inicio.gestion.impresionInicial();
            }
        });

        
        botonReiniciarNavegadores.setText("Reiniciar navegadores");
        botonReiniciarNavegadores.setBackground(Color.red);
        botonReiniciarNavegadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	Cerrar.cerrarIexplorer();
            	GestionJacob.capturaWebs();
            	botonResetearSubida.setEnabled(true);
            }
        });

        
        botonHabilitarTeclas.setText("Deshabilitar teclas");	
        botonHabilitarTeclas.setBackground(Color.green);
        botonHabilitarTeclas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	
            	habilita();
            	

            }
        });

 
        
        jButton11.setText("Ianus 1");
        jButton11.setBackground(Color.pink);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	GestionJacob.setVisible(Inicio.paciente1.ianus,false);
            }
        });
        
        
        jButton12.setText("Ianus 2");
        jButton12.setBackground(Color.pink);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	System.out.println("Hacer visible ianus 2");
            	GestionJacob.setVisible(Inicio.paciente2.ianus,false);
            }
        });
        
        
        jButton4.setText("versionar");
        jButton4.setVisible(false);
        jButton4.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
			}
		});

        botonReiniciarNHC.setBackground(Color.orange);
        botonReiniciarNHC.setText("Reiniciar NHC");
        botonReiniciarNHC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	GestionJacob.reIntroduceNHC();
            }
        });

        jButton6.setText("V auto OFF");
        jButton6.setBackground(Color.gray);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	InicioIanus.vAuto = !InicioIanus.vAuto;
            	if(InicioIanus.vAuto){
                    jButton6.setBackground(Color.pink);
                    jButton6.setText("V auto On");
            	}
            	else{
                    jButton6.setBackground(Color.GRAY);
                    jButton6.setText("V auto OFF");
            	}
            }
        });
        

        botonResetearSubida.setEnabled(false);
        botonResetearSubida.setText("Resetear subida");
        botonResetearSubida.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				Inicio.gestion.reset();
				botonResetearSubida.setEnabled(false);
			}
		});

        jButton8.setText("jButton8");
        jButton8.setVisible(false);

        jButton9.setText("Actualizar ianus");
        jButton9.setVisible(false);
        jButton9.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				
			}
		});

        jButton10.setText("Ianus visibles");
        jButton10.setBackground(Color.pink);
        jButton10.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				GestionJacob.setVisible(Inicio.paciente1.ianus,true);
				try {
					Thread.sleep(200);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				GestionJacob.setVisible(Inicio.paciente2.ianus,true);
				botonResetearSubida.setEnabled(true);
			}
		});

        botonVentanaNombres.setText("Ventana nombres");
        botonVentanaNombres.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				
				Boolean visible = Inicio.vNombres.isVisible();
				
				
				
				
				Inicio.vNombres.setVisible(!visible);
				if(visible){
					Inicio.panelPrincipal.frame.setBounds(Inicio.rVentanaInterfazPrincipalMax);
					Inicio.vExplorador.setBounds(Inicio.rVentanaExploradorMax);
					jSplitPane1.setDividerLocation(posicionSeparador);
				}else{
					posicionSeparador = jSplitPane1.getDividerLocation();
					Inicio.panelPrincipal.frame.setBounds(Inicio.rVentanaInterfazPrincipalMin);
					Inicio.vExplorador.setBounds(Inicio.rVentanaExploradorMin);
				}
			}
		});

        botonSalirOAsociar.setText("Asociar o Salir");
        botonSalirOAsociar.setVisible(false);
        
        javax.swing.GroupLayout panelControlLayout = new javax.swing.GroupLayout(panelControl);
        panelControl.setLayout(panelControlLayout);       
        panelControlLayout.setHorizontalGroup(
                panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(panelControlLayout.createSequentialGroup()
                    .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(boton2ianus,170,170,170)
                        .addComponent(botonReiniciarNavegadores,170,170,170)
                        .addComponent(botonHabilitarTeclas,170,170,170)
                        .addComponent(jButton4,170,170,170)
                        .addComponent(botonReiniciarNHC,170,170,170)
                        .addComponent(jButton6,170,170,170)
                        .addComponent(botonResetearSubida,170,170,170)
                        .addComponent(jButton8,170,170,170)
                        .addComponent(jButton9,170,170,170)
                        .addComponent(jButton10,170,170,170)
                        .addComponent(jButton11,170,170,170)
                        .addComponent(jButton12,170,170,170)
                        .addComponent(botonVentanaNombres,170,170,170)
                        .addComponent(botonSalirOAsociar,170,170,170)))

            );
            panelControlLayout.setVerticalGroup(
                panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelControlLayout.createSequentialGroup()
               //     .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(boton2ianus)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonReiniciarNavegadores)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonHabilitarTeclas)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonReiniciarNHC)
                     .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                       .addComponent(jButton6)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonResetearSubida)
                     .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                       .addComponent(jButton8)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                     .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                       .addComponent(jButton10)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)
                     .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                       .addComponent(jButton12)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonVentanaNombres)
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addComponent(botonSalirOAsociar))
            );

        jSplitPane1.setRightComponent(panelControl);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1,175,175,175)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );


        
        pack();
    }// </editor-fold>                        

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    } 
    
    public void setPdfs(CargaListaPdfs pdfs){
    	
    	Inicio.documento = new Documento[pdfs.nombrePdfs.length];
    	Inicio.indiceArchivoSelecc = 0;
    	
    	listaModeloPdfs = new DefaultListModel();
    	for(int i=0;i<pdfs.nombrePdfs.length;i++){
    		Inicio.documento[i] = new Documento(pdfs.rutaPdfs[i]);
    		System.out.println("Ruta " + i + "  " + Inicio.documento[i].rutaArchivo);
    		
    		if(!Inicio.documento[i].ocr){
    			System.out.println("El pdf " + i + "no tiene el formato ocr adecuado");
    			Inicio.ocr = false;
    		}
    		//	Damos formato al nombre de la lista
    		if(Inicio.ocr){
				String nhc = Inicio.documento[i].nhc;
				String espaciosEnBlanco = "";
				int numDigitos = 8 - nhc.length();
				for(int z = 0;z<numDigitos;z++){
					espaciosEnBlanco += "_";
				}
				nhc = espaciosEnBlanco + nhc;
				
				String nombreFormateado = pdfs.nombrePdfs[i].substring(1, 4) + " " + nhc + "   " +
						Inicio.documento[i].nombreNormalizado;
				listaModeloPdfs.addElement(nombreFormateado);
    		}
    		else{
    			listaModeloPdfs.addElement(pdfs.nombrePdfs[i]);
    		}
    	}
    	
        listaPdfs.setModel(listaModeloPdfs);
    }
    
    
    public void pulsarListaPdfs(MouseEvent ev){
    	
    	if(ev.getButton() == 1){
    		System.out.println("Boton izquierdo");
    		
    		Inicio.indiceArchivoSelecc = listaPdfs.getSelectedIndex();
    		Inicio.documentoActivo = Inicio.documento[Inicio.indiceArchivoSelecc];
    		
    		System.out.println("El pdf seleccionado es el " + Inicio.indiceArchivoSelecc);
    		
    		Inicio.panelPrincipal.webBrowserOperaciones.setVisible(true);
    		Inicio.panelPrincipal.webBrowserOperaciones
    			.navigate(Inicio.documento[Inicio.indiceArchivoSelecc].rutaArchivo);
    		
    		Inicio.vControlIanus.botonNHC.setText(Inicio.documento[Inicio.indiceArchivoSelecc].nhc);
    		Inicio.vControlIanus.botonServicio.setText(Inicio.documento[Inicio.indiceArchivoSelecc].servicio);
    		Inicio.vControlIanus.botonNombreDocumento.setText(Inicio.documento[Inicio.indiceArchivoSelecc].nombreNormalizado);
    		Inicio.vControlIanus.labelNombrePdf.setText(Inicio.documento[Inicio.indiceArchivoSelecc].nombreArchivo);
    		
    	}else if(ev.getButton() == 2){
    		System.out.println("Boton central");
    	}
    	else{
    		System.out.println("Boton derecho");
    	}
    }
    
    public void asociaDocumento(String titulo){
    	
    	System.out.println("Imprimimos en ianus");
    	
    	RobotIanus robot = new RobotIanus();
    	robot.asocia(titulo);
    	
    	
        int tamañoLista = listaPdfs.getModel().getSize();

        	if(Inicio.indiceArchivoSelecc + 1< tamañoLista){
        		
        		Inicio.indiceArchivoSelecc++;
        		Inicio.documentoActivo = Inicio.documento[Inicio.indiceArchivoSelecc];
        		

        		
        		listaPdfs.setSelectedIndex(Inicio.indiceArchivoSelecc);
        	//	jScrollPane1.getVerticalScrollBar().setValue(Inicio.indiceArchivoSelecc*15 -15);
          		

        		try{
        			
        			Inicio.panelPrincipal.webBrowserOperaciones.setVisible(true);
         			
        			SwingUtilities.invokeLater(new Runnable() {
        				public void run() {  
        					Inicio.panelPrincipal.webBrowserOperaciones.navigate(Inicio.documento[Inicio.indiceArchivoSelecc].rutaArchivo);
        				}
        			});  
        			
        			Inicio.vControlIanus.panelBotones.setBackground(new Color(80,200,120));
 
        			
            		if(!Inicio.vNombres.comboServicio.getSelectedItem().toString().equals(Inicio.documento[Inicio.indiceArchivoSelecc])){
            			Inicio.vControlIanus.botonServicio.setBackground(Color.red);
            			Inicio.vControlIanus.panelBotones.setBackground(Color.yellow);
            			Inicio.vControlIanus.botonServicio.setText(Inicio.documento[Inicio.indiceArchivoSelecc].servicio);
            		}
            		else{
            			Inicio.vControlIanus.botonServicio.setBackground(Color.green);
            			Inicio.vControlIanus.panelBotones.setBackground(new Color(143, 188, 143));
            		}
            		if(!Inicio.documento[Inicio.indiceArchivoSelecc].nhc.equals(Inicio.documento[Inicio.indiceArchivoSelecc-1].nhc)){
            			Inicio.vControlIanus.panelBotones.setBackground(Color.red);
            			Inicio.vControlIanus.botonNHC.setText(Inicio.documento[Inicio.indiceArchivoSelecc].nhc);

            		}
            		else{
            			Inicio.vControlIanus.panelBotones.setBackground(new Color(143, 188, 143));
            			Inicio.vControlIanus.botonNHC.setText(Inicio.documento[Inicio.indiceArchivoSelecc].nhc);
            		}
        			
            		Inicio.vControlIanus.botonNombreDocumento.setText(Inicio.documento[Inicio.indiceArchivoSelecc].nombreNormalizado);
        			
         			Inicio.vNombres.comboServicio.setSelectedItem(Inicio.documento[Inicio.indiceArchivoSelecc].servicio);
         			
       			    
        		}catch (Exception ev) {
        			System.out.println(ev);
        		}
        	}
        	else{
        		Inicio.panelPrincipal.webBrowserOperaciones.setVisible(false);
        	}
    }
    
    private void habilita(){
    	if(Inicio.teclasHabilitadas){
    		Inicio.teclasHabilitadas = false;
    		botonHabilitarTeclas.setBackground(Color.red);
    		botonHabilitarTeclas.setText("Habilitar teclas");
    	}
    	else{
    		Inicio.teclasHabilitadas = true;
    		botonHabilitarTeclas.setBackground(Color.green);
    		botonHabilitarTeclas.setText("Deshabilitar teclas");
    	}
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaExplorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaExplorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaExplorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaExplorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaExplorador(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify  
    public javax.swing.JList listaPdfs;
    public DefaultListModel listaModeloPdfs;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel panelControl;
    private javax.swing.JPanel panelPdfs;
    // End of variables declaration                   
}
